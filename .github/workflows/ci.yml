name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [rust, go]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        if: matrix.language == 'rust'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy, rustfmt

      - name: Rust Cache
        if: matrix.language == 'rust'
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run Rust tests & lints
        if: matrix.language == 'rust'
        run: |
          cargo fmt --all -- --check
          cargo clippy --all-targets --all-features -- -D warnings
          cargo test --workspace --all-features --verbose

      - name: Set up Go
        if: matrix.language == 'go'
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Go Cache
        if: matrix.language == 'go'
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/go/build-cache
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Run Go vet & tests
        if: matrix.language == 'go'
        run: |
          cd orchestrator
          go vet ./...
          go test ./...