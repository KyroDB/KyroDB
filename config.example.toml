# KyroDB Configuration Example (TOML)
#
# Copy this file to config.toml and customize for your deployment.
# All settings are optional - defaults are production-ready.
#
# Environment variables override config file values:
#   KYRODB__SERVER__PORT=50052 ./kyrodb_server
#   KYRODB__CACHE__CAPACITY=50000 ./kyrodb_server --config config.toml

# ============================================================================
# Server Configuration
# ============================================================================
[server]
# gRPC server host (IPv4 or IPv6)
host = "127.0.0.1"

# gRPC server port
port = 50051

# HTTP observability port (auto-calculated as gRPC port + 1000 if omitted)
# http_port = 51051

# Maximum concurrent connections
max_connections = 10000

# Connection idle timeout (seconds)
connection_timeout_secs = 300

# Graceful shutdown timeout (seconds)
shutdown_timeout_secs = 30

# ============================================================================
# Cache Configuration (Hybrid Semantic Cache)
# ============================================================================
[cache]
# Maximum number of vectors to cache
# Customer A might use 1000, Customer B might use 100,000
capacity = 10000

# Cache eviction strategy: "lru", "learned", or "abtest"
# - lru: Simple LRU eviction (baseline)
# - learned: Hybrid Semantic Cache with RMI predictor
# - abtest: A/B test between LRU and Learned
strategy = "learned"

# Training interval for Hybrid Semantic Cache (seconds)
training_interval_secs = 600  # 10 minutes

# Minimum access count before training RMI
min_training_samples = 100

# Enable A/B testing (only applies when strategy = "abtest")
enable_ab_testing = false

# A/B test traffic split (0.0-1.0, fraction for treatment group)
ab_test_split = 0.5

# ============================================================================
# HNSW Configuration (Vector Search Backend)
# ============================================================================
[hnsw]
# Maximum number of vectors in index
max_elements = 100000

# Number of bidirectional links per node (M parameter)
# Higher M = better recall, more memory
m = 16

# Size of dynamic candidate list during construction
# Higher ef_construction = better index quality, slower build
ef_construction = 200

# Size of dynamic candidate list during search
# Higher ef_search = better recall, slower queries
ef_search = 50

# Vector dimension (must match your embeddings)
# Common values: 768 (sentence transformers), 1536 (OpenAI), 384 (MiniLM)
dimension = 768

# Distance metric: "cosine", "euclidean", or "innerproduct"
distance = "cosine"

# ============================================================================
# Persistence Configuration (WAL + Snapshots)
# ============================================================================
[persistence]
# Data directory for WAL and snapshots
data_dir = "./data"

# Enable write-ahead log (disable only for benchmarking)
enable_wal = true

# WAL flush interval (milliseconds, 0 = immediate fsync)
# Lower = more durable, slower writes
wal_flush_interval_ms = 100

# fsync policy: "none", "data_only", or "full"
# - none: No fsync (fastest, data loss on crash)
# - data_only: fsync data only (good balance)
# - full: fsync data + metadata (safest, slowest)
fsync_policy = "data_only"

# Snapshot interval (seconds, 0 = disabled)
snapshot_interval_secs = 3600  # 1 hour

# Maximum WAL size before rotation (bytes)
max_wal_size_bytes = 104857600  # 100 MB

# Enable automatic crash recovery on startup
enable_recovery = true

# ============================================================================
# SLO Configuration (Service Level Objectives)
# ============================================================================
[slo]
# P99 latency threshold (milliseconds)
# Breach alert if P99 > this value
p99_latency_ms = 1.0

# Cache hit rate threshold (0.0-1.0)
# Breach alert if hit rate < this value
cache_hit_rate = 0.70

# Error rate threshold (0.0-1.0)
# Breach alert if error rate > this value
error_rate = 0.001

# Availability threshold (0.0-1.0)
# Breach alert if availability < this value
availability = 0.999

# Minimum sample size before alerting (prevent false positives during startup)
min_samples = 100

# ============================================================================
# Rate Limiting Configuration
# ============================================================================
[rate_limit]
# Enable rate limiting (disable for trusted internal networks)
enabled = false

# Maximum queries per second per connection
max_qps_per_connection = 1000

# Maximum queries per second globally
max_qps_global = 100000

# Burst capacity (token bucket size)
burst_capacity = 10000

# ============================================================================
# Logging Configuration
# ============================================================================
[logging]
# Log level: "trace", "debug", "info", "warn", "error"
level = "info"

# Log format: "text" (human-readable) or "json" (for aggregation)
format = "text"

# Log file path (omit for stdout only)
# file = "./logs/kyrodb.log"

# Enable log rotation
rotation = true

# Maximum log file size before rotation (bytes)
max_file_size_bytes = 104857600  # 100 MB

# Maximum number of rotated log files to keep
max_files = 10
